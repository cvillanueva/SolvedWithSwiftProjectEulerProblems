import UIKit

/*
    Problem statement
    =================
    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms.
*/

print("Even Fibonacci Numbers")

func findEvenFib(below: Int) {
    var fibList = [0,1,1]
    var evenSum = 0
    var newFib = 0
    var n = 3
    while newFib < below {
        newFib = fibList[n-1] + fibList[n-2]

        if newFib < below {
            if newFib%2 == 0 {
                evenSum += newFib
            }

            print("n:\(n) fib:\(newFib) evenSum:\(evenSum)")
            fibList.append(newFib)
        }

        n += 1
    }
}

findEvenFib(below: 4000000)

// Time complexity: O(n)
